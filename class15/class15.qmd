---
title: "Class 15: Investigating Pertussis Resurgence"
author: "Sabrina Wu (A16731683)"
format: pdf
---

#1. Investigating pertussis cases by year

Install the `datapasta` package in R brain: 
```{r}
#install.packages("datapasta")
```

>Q1. With the help of the R “addin” package datapasta assign the CDC pertussis case number data to a data frame called cdc and use ggplot to make a plot of cases numbers over time.

Importing Data (use "Paste as data.frame" under "Addins" to copy the data off websties)
```{r}
library(datapasta)
cdc <- data.frame(
                                 Year = c(1922L,1923L,1924L,1925L,
                                          1926L,1927L,1928L,1929L,1930L,1931L,
                                          1932L,1933L,1934L,1935L,1936L,
                                          1937L,1938L,1939L,1940L,1941L,1942L,
                                          1943L,1944L,1945L,1946L,1947L,
                                          1948L,1949L,1950L,1951L,1952L,
                                          1953L,1954L,1955L,1956L,1957L,1958L,
                                          1959L,1960L,1961L,1962L,1963L,
                                          1964L,1965L,1966L,1967L,1968L,1969L,
                                          1970L,1971L,1972L,1973L,1974L,
                                          1975L,1976L,1977L,1978L,1979L,1980L,
                                          1981L,1982L,1983L,1984L,1985L,
                                          1986L,1987L,1988L,1989L,1990L,
                                          1991L,1992L,1993L,1994L,1995L,1996L,
                                          1997L,1998L,1999L,2000L,2001L,
                                          2002L,2003L,2004L,2005L,2006L,2007L,
                                          2008L,2009L,2010L,2011L,2012L,
                                          2013L,2014L,2015L,2016L,2017L,2018L,
                                          2019L,2020L,2021L,2022L),
         Number.of.Cases = c(107473,164191,165418,152003,
                                          202210,181411,161799,197371,
                                          166914,172559,215343,179135,265269,
                                          180518,147237,214652,227319,103188,
                                          183866,222202,191383,191890,109873,
                                          133792,109860,156517,74715,69479,
                                          120718,68687,45030,37129,60886,
                                          62786,31732,28295,32148,40005,
                                          14809,11468,17749,17135,13005,6799,
                                          7717,9718,4810,3285,4249,3036,
                                          3287,1759,2402,1738,1010,2177,2063,
                                          1623,1730,1248,1895,2463,2276,
                                          3589,4195,2823,3450,4157,4570,
                                          2719,4083,6586,4617,5137,7796,6564,
                                          7405,7298,7867,7580,9771,11647,
                                          25827,25616,15632,10454,13278,
                                          16858,27550,18719,48277,28639,32971,
                                          20762,17972,18975,15609,18617,
                                          6124,2116,3044)
       )
```

Making ggplot
```{r}
library(ggplot2)

plot <- ggplot(cdc) +
  aes(Year, Number.of.Cases) +
  geom_point() +
  geom_line() +
  labs(title="Pertussis Cases by Year (1922-2019)")
plot
```

#2. A tale of two vaccines (wP & aP)

>Q2. Using the ggplot geom_vline() function add lines to your previous plot for the 1946 introduction of the wP vaccine and the 1996 switch to aP vaccine (see example in the hint below). What do you notice?

```{r}
plot +
  geom_vline(xintercept=1946, col="blue",lty="dashed")+
  geom_text(aes(x=1946, y=2.5*10^5, label="wP"))+
  geom_vline(xintercept=1996, col="red",lty="dashed") +
    geom_text(aes(x=1996, y=2.5*10^5, label="aP"))
  
```
There was a decrease and then plateau over time. 


>Q3. Describe what happened after the introduction of the aP vaccine? Do you have a possible explanation for the observed trend?

It is likely that the aP vaccine was not very effective as the number of cases did not decrease after the introduction. There may be many reasons for the truct such as increase sensitivity to PCR-based testing, vaccine hesitancy, and bacterial evolution.  


#3. Exploring CMI-PB data

```{r}
# Allows us to read, write and process JSON data
library(jsonlite)
```

Reading Data
```{r}
subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE) 
head(subject,3)
```

>Q4. How many aP and wP infancy vaccinated subjects are in the dataset?

```{r}
table(subject$infancy_vac)
```
There are 87 aP subjects adn 85 wP subjects.

>Q5. How many Male and Female subjects/patients are in the dataset?

```{r}
table(subject$biological_sex)
```
There are 112 female and 60 males. 

>Q6. What is the breakdown of race and biological sex (e.g. number of Asian females, White males etc…)?

```{r}
table(subject$biological_sex, subject$race)
```

```{r}
library(lubridate)
today()
today() - ymd("2000-01-01")
time_length( today() - ymd("2000-01-01"),  "years")
```
>Q7. Using this approach determine (i) the average age of wP individuals, (ii) the average age of aP individuals; and (iii) are they significantly different?

```{r}
subject$age <- today()-ymd(subject$year_of_birth)

library(dplyr)

ap <- subject %>% filter(infancy_vac == "aP")

round( summary( time_length( ap$age, "years" ) ) )
```
```{r}
# wP
wp <- subject %>% filter(infancy_vac == "wP")
round( summary( time_length( wp$age, "years" ) ) )
```
```{r}
t.test(ap$age,wp$age)
```
There are significant difference as the p-value is less than 0.05. 

>Q8. Determine the age of all individuals at time of boost?

```{r}
int <- ymd(subject$date_of_boost) - ymd(subject$year_of_birth)
age_at_boost <- time_length(int, "year")
head(age_at_boost)
```
Age of all individual at time of boost is stored in age-at-boost.

>Q9. With the help of a faceted boxplot or histogram (see below), do you think these two groups are significantly different?

```{r}
library(ggplot2)
ggplot(subject) +
  aes(time_length(age, "year"),
      fill=as.factor(infancy_vac)) +
  geom_histogram(show.legend=FALSE) +
  facet_wrap(vars(infancy_vac), nrow=2) +
  xlab("Age in years")

```
```{r}
# Or use wilcox.test() 
x <- t.test(time_length( wp$age, "years" ),
       time_length( ap$age, "years" ))

x$p.value
```
There is clearly a difference between the two groups as the graphs are very different with a very small p-value. 

## Joining multiple tables
```{r}
# Complete the API URLs...
library(jsonlite)
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/plasma_ab_titer", simplifyVector = TRUE)
 
```

>Q9. Complete the code to join specimen and subject tables to make a new merged data frame containing all specimen records along with their associated subject details:

```{r}
meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
```

>Q10. Now using the same procedure join meta with titer data so we can further analyze this data in terms of time of visit aP/wP, male/female etc.

```{r}
abdata <- inner_join(titer, meta)
dim(abdata)
```

>Q11. How many specimens (i.e. entries in abdata) do we have for each isotype?

```{r}
table(abdata$isotype)
```

>Q12. What are the different $dataset values in abdata and what do you notice about the number of rows for the most “recent” dataset?

```{r}
table(abdata$dataset)
```

#4. Examine IgG Ab  titer levels

```{r}
igg <- abdata %>% filter(isotype == "IgG")
head(igg)
```

>Q13. Complete the following code to make a summary boxplot of Ab titer levels (MFI) for all antigens:

```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen) +
  geom_boxplot() + 
    xlim(0,75) +
  facet_wrap(vars(visit), nrow=2)
```
>Q14. What antigens show differences in the level of IgG antibody titers recognizing them over time? Why these and not others?

FIM2/3 show differences in the level of IgG antibody titer recognizing them over time.

```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  facet_wrap(vars(visit), nrow=2) +
  xlim(0,75) +
  theme_bw()
```

Adding `infancy_vac`
```{r}
igg %>% filter(visit != 8) %>%
ggplot() +
  aes(MFI_normalised, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  xlim(0,75) +
  facet_wrap(vars(infancy_vac, visit), nrow=2)
```

>Q15. Filter to pull out only two specific antigens for analysis and create a boxplot for each. You can chose any you like. Below I picked a “control” antigen (“OVA”, that is not in our vaccines) and a clear antigen of interest (“PT”, Pertussis Toxin, one of the key virulence factors produced by the bacterium B. pertussis).

```{r}
filter(igg, antigen=="OVA") %>%
  ggplot() +
  aes(MFI_normalised, col=infancy_vac) +
  geom_boxplot(show.legend=T) +
  facet_wrap(vars(visit)) +
  theme_bw()
```
for antigen FIM2/3
```{r}
filter(igg, antigen=="FIM2/3") %>%
  ggplot() +
  aes(MFI_normalised, col=infancy_vac) +
  geom_boxplot(show.legend = T) +
  facet_wrap(vars(visit)) +
  theme_bw()
```
>Q16. What do you notice about these two antigens time courses and the PT data in particular?

The PT levels rises over time, while the OVA doesn't change that much. 

>Q17. Do you see any clear difference in aP vs. wP responses?

There is no clear difference in aP vs WP responses as the two colors aligns fairly similarly. 
2021 dataset
```{r}
abdata.21 <- abdata %>% filter(dataset == "2021_dataset")

abdata.21 %>% 
  filter(isotype == "IgG",  antigen == "PT") %>%
  ggplot() +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac,
        group=subject_id) +
    geom_point() +
    geom_line() +
    geom_vline(xintercept=0, linetype="dashed") +
    geom_vline(xintercept=14, linetype="dashed") +
  labs(title="2021 dataset IgG PT",
       subtitle = "Dashed lines indicate day 0 (pre-boost) and 14 (apparent peak levels)")
```
2020 dataset
```{r}
abdata.20 <- abdata %>% filter(dataset == "2020_dataset")

abdata.20 %>% 
  filter(isotype == "IgG",  antigen == "PT") %>%
  ggplot() +
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac,
        group=subject_id) +
    geom_point() +
    geom_line() +
    geom_vline(xintercept=0, linetype="dashed") +
    geom_vline(xintercept=14, linetype="dashed") +
  labs(title="2020 dataset IgG PT",
       subtitle = "Dashed lines indicate day 0 (pre-boost) and 14 (apparent peak levels)")
```
>Q18. Does this trend look similar for the 2020 dataset?

The trends are slightly different. There is a clearer difference between aP and wP, but the general trend of large increase in the first 14 days is consistent. 

#5. Obtaining CMI-PB RNASeq data

```{r}
url <- "https://www.cmi-pb.org/api/v2/rnaseq?versioned_ensembl_gene_id=eq.ENSG00000211896.7"

rna <- read_json(url, simplifyVector = TRUE) 
```

```{r}
#meta <- inner_join(specimen, subject)
ssrna <- inner_join(rna, meta)
```
>Q19. Make a plot of the time course of gene expression for IGHG1 gene (i.e. a plot of visit vs. tpm)

```{r}
ggplot(ssrna) +
  aes(visit, tpm, group=subject_id) +
  geom_point() +
  geom_line(alpha=0.2)
```
>Q20.: What do you notice about the expression of this gene (i.e. when is it at it’s maximum level)?

It is at it's maximum level at 4 visits. 

>Q21. Does this pattern in time match the trend of antibody titer data? If not, why not?

Both graph shows a significant increase at 4, but antibodies are more long lived.

```{r}
ggplot(ssrna) +
  aes(tpm, col=infancy_vac) +
  geom_boxplot() +
  facet_wrap(vars(visit))
```
Focus on particular visit
```{r}
ssrna %>%  
  filter(visit==4) %>% 
  ggplot() +
    aes(tpm, col=infancy_vac) + geom_density() + 
    geom_rug() 
```

#6. Working with larger datasets

```{r}
# Change for your downloaded file path
rnaseq <- read.csv("2020LD_rnaseq.csv")

head(rnaseq,3)
```
```{r}
dim(rnaseq)
```
How many genes reported for each specimen
```{r}
n_genes <- table(rnaseq$specimen_id)
head( n_genes , 10)
```
How many specimens?
```{r}
length(n_genes)
```
Same number of genes per specimen?
```{r}
all(n_genes[1]==n_genes)
```
Convert to wide format
```{r}
library(tidyr)

rna_wide <- rnaseq %>% 
  select(versioned_ensembl_gene_id, specimen_id, tpm) %>%
  pivot_wider(names_from = specimen_id, values_from=tpm)

dim(rna_wide)
head(rna_wide[,1:7], 3)
```




