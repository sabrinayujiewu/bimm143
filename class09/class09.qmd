---
title: "Class 9: Structural Bioinformatics 1 pt.1"
author: "Sabrina Wu (PID: A16731683)"
format: pdf
---

The main database for structural data is caled the PDB (Protein Data Bank). Let's see what it contains:

Data from: https://www.rcsb.org/stats/summary, download the csv file and import into this folder
```{r}
pdbdb <- read.csv("C:/Users/sabri/Downloads/Data_Export_Summary.csv",row.names=1)
pdbdb
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
pdbdb$Total
```
I need to remove the comman and convert to numeric to do math:
```{r}
as.numeric(sub(",","",pdbdb$Total))

```
I could trun this into a function to fix the whole table or any future table I read like this:
```{r}
x <- pdbdb$Total
as.numeric(sub(",","",x))
```

```{r}
comma2numeric <- function (x){
  as.numeric(sub(",","",x))
}
```

```{r}
comma2numeric(pdbdb$X.ray)
```
```{r}
apply(pdbdb,2,comma2numeric)
```
##Or try a different read/import function:

```{r}
library(readr)
pdbdb <- read_csv("C:/Users/sabri/Downloads/Data_Export_Summary.csv")
```
>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
sum(pdbdb$`X-ray`)/sum(pdbdb$Total)*100
```

```{r}
sum(pdbdb$EM)/sum(pdbdb$Total)*100
```

>Q2: What proportion of structures in the PDB are protein?

```{r}
pdbdb$Total[1]/sum(pdbdb$Total)*100

```
Most of database are protein and is with x-ray --> biased.  

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

4,553 Structures came up in the search. 


## Mol*

Mol* (pronounced "molstar") is a new web-based molecular viewer that we will need to learn the basics of here.

http://molstar.org/viewer/

We will use PDB code: 1HSG

![A first image from molstar](1HSG.png)

More custome images: 
![The all important catalytic ASp25 amino acid](1HSG (1).png)
![Surface display showing Merk compound in the peptide binding pocket](1HSG (2).png)


>Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

We are just representing water as one molecule instead of seeing the individual atoms that makes up the water molecules. 

>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

The water molecule is in between all the ligand and has a residue number of HOH 308.
![Critical Water molecule](1HSG (3).png)

>Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.




>Q7: [Optional] As you have hopefully observed HIV protease is a homodimer (i.e. it is composed of two identical chains). With the aid of the graphic display can you identify secondary structure elements that are likely to only form in the dimer rather than the monomer?


## The Bio3D package

The bio3d package allows us to do all sorts of structural bioinformativs work in R.

Let's start with how it can read these PDB files:

```{r}
library(bio3d)

pdb <- read.pdb("1hsg")
pdb
```
```{r}
attributes(pdb)
```
```{r}
head(pdb$atom)
```
```{r}
pdbseq(pdb)[25]
```

>Q7: How many amino acid residues are there in this pdb object? 

```{r}
sum(pdb$calpha)
length(pdbseq(pdb))
```
There are 198 amino acid residues


>Q8: Name one of the two non-protein residues? 

HOH and MK1

>Q9: How many protein chains are in this structure? 

There are two chains in the structure. 

```{r}
unique(pdb$atom$chain)
```

##Predicting functional motions of a single structure

Let's do a bioinformatics prediction of functional motions - i.e. the movements that one of these molecules needs to make to do tis stuff. 
```{r}
adk <- read.pdb("6s36")
adk
```
```{r}
# Perform flexiblity prediction
m <- nma(adk)

plot(m)
```
Write out multi-model PDB file that we can use to make an animation of the predicted motions. 
```{r}
mktrj(m, file="adk.pdb")
```
 
I can open this in Mol* to play the trajectory...






11/05/2024

## comparative analysis of protein structures

```{r}
library(bio3d)
```

Here we will find and analyze all ADK structures in the PDB database.

We will start with a single database acession id: "1ake_A"

```{r}
id <- "1ake_A"
aa <- get.seq(id)
```
I ran these cmds in the R brain/console

install.packages("BiocManager")
BiocManager::install("msa")

>Q10. Which of the packages above is found only on BioConductor and not CRAN? 

The `msa` package is only from BioCOnductor. 

The install.packages() function is used to install packages from the main CRAN repository for R packages. BioConductor is a separate repository of R packages focused on high-throughput biomolecular assays and biomolecular data. Packages from BioConductor can be installed using the BiocManager::install() function. Finally, R packages found on GitHub or BitBucket can be installed using devtools::install_github() and devtools::install_bitbucket() functions.

>Q11. Which of the above packages is not found on BioConductor or CRAN?

The package `bio3d-view` 

>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket?

True

>Q13. How many amino acids are in this sequence, i.e. how long is this sequence?

```{r}
attributes(aa)
```
```{r}
aa$id
```
```{r}
aa$ali
```
```{r}
aa$call
```
```{r}
ncol(aa$ali)
```
There are 214 amino acids in the sequence. 

Ran blast against the amino sequence.Comment bc on government website. 
```{r}
#b <- blast.pdb(aa)
```
Pre-calculated results:
```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
#attributes(b)
#head(b$hit.tbl)
```

```{r}
#hits <- plot(b)
```

```{r}
#hits$pdb.id
```

Summary of what we had done:
1. get.seq("1ADK") to get amino acid sequence -> aa
2. blast.odb(aa) to find similar sequences -> b
3. get.pdb(hits) to download the tophits -> files
These two line of codes does what you can do on the website.

4. pdbalm(files, fit=TRUE) superimpose all the tophits -> pdbs
5. pca(pdbs) does pca on your file (PC)


```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```
Superimpose the different pdbs together to see similarities
```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```
```{r}
pdbs
```
```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
#plot(pdbs, labels=ids)
```


## Principle Component Analysis

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```
Right bottom panel: show that only 3 PC are needed to account for pretty much all the variance.

```{r}
plot(pc.xray, pc.axes = c(1,2))
```


```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```



## Rurther visualization

To visualize the major structural variations in the ensemble the function mktrj() can be used to generate a trajectory PDB file by interpolating along a give PC (eigenvector):

```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```
Can see this file in Molstar
 
```{r}
#Plotting results with ggplot2
library(ggplot2)
library(ggrepel)

df <- data.frame(PC1=pc.xray$z[,1], 
                 PC2=pc.xray$z[,2], 
                 col=as.factor(grps.rd),
                 ids=ids)

p <- ggplot(df) + 
  aes(PC1, PC2, col=col, label=ids) +
  geom_point(size=2) +
  geom_text_repel(max.overlaps = 20) +
  theme(legend.position = "none")
p

```

## Normal Mode Analysis

```{r}
# NMA of all structures
modes <- nma(pdbs)
```

```{r}
plot(modes, pdbs, col=grps.rd)
```
>Q14. What do you note about this plot? Are the black and colored lines similar or different? Where do you think they differ most and why?

The black and colored lines are pretty different in some portions. The biggest difference is between the 125-150 residue number. This is likely because there is a difference in secondary structure. 


```{r}
uniprot <- 248838887
pdb <- 195610
pdb/uniprot*100

```
Know way more sequences than structures bc structure determination is expensive. 



